//struct for series61_vs

typedef struct _series61_vs{
    uint64_t version8;
    uint64_t reallocatedSectorCount;
    uint64_t slcReallocatedSectorCount;
    uint64_t poweronHoursCount;
    uint64_t uncorrectableErrorCountXorFail1;
    uint64_t uncorrectableErrorCountXorFail2;
    uint64_t eCCUnc;
    uint64_t softLdpcCorrectionEventCount;
    uint64_t tlcReadRetryFail;
    uint64_t slcReadRetryFail;
    uint64_t temperature;
    uint64_t readRetryTrigger;
    uint64_t totalLbasWritten;
    uint64_t totalLbasRead;
    uint64_t ps3Count;
    uint64_t ps4Count;
    uint64_t l1_2Count;
    uint64_t tlcAvailableSpareBlocks;
    uint64_t slcAvailableSpareBlocks;
    uint64_t wearRangeDelta1;
    uint64_t wearRangeDelta2;
    uint64_t highTemp;
    uint64_t lowTemp;
    uint64_t avgTemp;
    uint64_t recentHigh;
    uint64_t recentLow;
    uint64_t autocalibrationFail;
    uint64_t slcNandDataRead;
    uint64_t tlcNandDataRead;
    uint64_t validBlockCounts;
    uint64_t slcNandWrites;
    uint64_t tlcNandWrites;
    uint64_t tlc_qlcWearingLevelingCount;
    uint64_t slcWearingLevelingCount;
    uint64_t tlcNandWritesDueToWearingLeveling;
    uint64_t slcNandWritesDueToWearingLeveling;
    uint64_t currentTlcSpareSuperBlock;
    uint64_t currentSlcSpareSuperBlock;
    uint64_t slcToTlcDefragCount;
    uint64_t tlcDefragCount;
    uint64_t slcDefragCount;
    uint64_t readBackFailCount;
    uint64_t tlcProgramFail;
    uint64_t slcProgramFail;
    uint64_t tlcEraseFail;
    uint64_t slcEraseFail;
    uint64_t tlcEraseCycleAverage;
    uint64_t tlcEraseCycleMax;
    uint64_t tlcEraseCycleMin;
    uint64_t slcEraseCycleAverage;
    uint64_t slcEraseCycleMax;
    uint64_t slcEraseCycleMin;
    uint64_t ps0ToPs1Entry;
    uint64_t ps1ToPs0Exit;
    uint64_t ps1ToPs2Entry;
    uint64_t ps2ToPs1Exit;
    uint64_t ps2ToPsShutDownEntry;
    uint64_t linkDownshift;
    uint64_t idleSleepCount;
    uint64_t l1EventCount;
    uint64_t ecrcEventCount;
    uint64_t lcrcEventCount;
    uint64_t slc2tlcDataEvictionIdle;
    uint64_t slc2tlcDataEvictionRuntime;
    uint64_t dramEccCorrected;
    uint64_t sramEccCorrected;
    uint64_t e2eFailDetected;
    uint64_t ps3_5Count;
    uint64_t throttlingLightCount;
    uint64_t throttlingHeavyCount;
    uint64_t throttlingLightDuration;
    uint64_t throttlingHeavyDuration;
    uint64_t retryCount;
    uint64_t softDecodeCount;
    uint64_t manfBadBlocks;
    uint64_t manfBadBlocksWorst;
    uint64_t slcValidBlockCounts;
    uint64_t tlcValidBlockCounts;
    uint64_t slcSystemBlockWrites;
    uint64_t slcWritesDueToReadDisturb;
    uint64_t tlcWritesDueToReadDisturb;
    uint64_t maxOpenBlockSsgsCount;
    uint64_t maxClosedBlockSsgsCount;
    uint64_t l2pTableSwap;
    uint64_t ignore1;
    uint64_t slcMaxCwErrorCountWithRrPass;
    uint64_t tlc_qlcMaxCwErrorCountWithRrPass;
    uint64_t totalErasePoolBlockCount;
    uint64_t dslcBlocksInLinkTable;
    uint64_t maxDslcEraseCycleCount;
    uint64_t avgDslcEraseCycleCount;
    uint64_t dslcNandWrite;
    uint64_t dslcNandRead;
    uint64_t dslcToDslcDefragCount;
    uint64_t dslcProgramFail;
    uint64_t dslcEraseFail;
    uint64_t dslcRetiredBlocks;
    uint64_t dslcAllocatedSize;
    uint64_t reconditionCounts;
    uint64_t minDSLCEraseCount;
    uint64_t maxTotalEraseCount;
    uint64_t minTotalEraseCount;
    uint64_t avgTotalEraseCount;
    uint64_t maxOpenSsgsCount;
    uint64_t maxClosedSsgsCount;
    uint64_t slcDummyWrites;
    uint64_t tlcDummyWrites;
    uint64_t dslcDummyWrites;
    uint64_t ignore2;
    uint64_t dummyReads;
    uint64_t coreDumpCount;
    uint64_t dataTrim;
    uint64_t ignore3;
    uint64_t ignore4;
    uint64_t ignore5;
    uint64_t ignore6;
    uint64_t ignore7;
    uint64_t ignore8;
    uint64_t ignore9;
    uint64_t ignore10;
    uint64_t ignore11;
    uint64_t ignore12;
    uint64_t ignore13;
    uint64_t ignore14;
    uint64_t ignore15;
    uint64_t tlcWaiWithDslcAsTlcSize;
    uint64_t tlcWaiWithDslcAsSlcSize;
    uint64_t slcWai;
    uint64_t tlcTotalEraseCount;
    uint64_t slcTotalEraseCount;
    uint64_t dslcTotalEraseCount;
    uint64_t tlcBlockSectorCount;
    uint64_t mapBlockPopCount;
    uint64_t gwproBlockPopCount;
    uint64_t dramRetrainCount;
} series61_vs

//print function for series61_vs

static void print_series61_vs_info(series61_vs* data_block) {
    printf("version8: %ld\n", data_block->version8);
    printf("reallocatedSectorCount: %ld\n", data_block->reallocatedSectorCount);
    printf("slcReallocatedSectorCount: %ld\n", data_block->slcReallocatedSectorCount);
    printf("poweronHoursCount: %ld\n", data_block->poweronHoursCount);
    printf("uncorrectableErrorCountXorFail: %ld\n", data_block->uncorrectableErrorCountXorFail);
    printf("uncorrectableErrorCountXorFail2: %ld\n", data_block->uncorrectableErrorCountXorFail2);
    printf("eCCUnc: %ld\n", data_block->eCCUnc);
    printf("softLdpcCorrectionEventCount: %ld\n", data_block->softLdpcCorrectionEventCount);
    printf("tlcReadRetryFail: %ld\n", data_block->tlcReadRetryFail);
    printf("slcReadRetryFail: %ld\n", data_block->slcReadRetryFail);
    printf("temperature: %ld\n", data_block->temperature);
    printf("readRetryTrigger: %ld\n", data_block->readRetryTrigger);
    printf("totalLbasWritten: %ld\n", data_block->totalLbasWritten);
    printf("totalLbasRead: %ld\n", data_block->totalLbasRead);
    printf("ps3Count: %ld\n", data_block->ps3Count);
    printf("ps4Count: %ld\n", data_block->ps4Count);
    printf("l1_2Count: %ld\n", data_block->l1_2Count);
    printf("tlcAvailableSpareBlocks: %ld\n", data_block->tlcAvailableSpareBlocks);
    printf("slcAvailableSpareBlocks: %ld\n", data_block->slcAvailableSpareBlocks);
    printf("wearRangeDelta: %ld\n", data_block->wearRangeDelta);
    printf("wearRangeDelta2: %ld\n", data_block->wearRangeDelta2);
    printf("highTemp: %ld\n", data_block->highTemp);
    printf("lowTemp: %ld\n", data_block->lowTemp);
    printf("avgTemp: %ld\n", data_block->avgTemp);
    printf("recentHigh: %ld\n", data_block->recentHigh);
    printf("recentLow: %ld\n", data_block->recentLow);
    printf("autocalibrationFail: %ld\n", data_block->autocalibrationFail);
    printf("slcNandDataRead: %ld\n", data_block->slcNandDataRead);
    printf("tlcNandDataRead: %ld\n", data_block->tlcNandDataRead);
    printf("validBlockCounts: %ld\n", data_block->validBlockCounts);
    printf("slcNandWrites: %ld\n", data_block->slcNandWrites);
    printf("tlcNandWrites: %ld\n", data_block->tlcNandWrites);
    printf("tlc_qlcWearingLevelingCount: %ld\n", data_block->tlc_qlcWearingLevelingCount);
    printf("slcWearingLevelingCount: %ld\n", data_block->slcWearingLevelingCount);
    printf("tlcNandWritesDueToWearingLeveling: %ld\n", data_block->tlcNandWritesDueToWearingLeveling);
    printf("slcNandWritesDueToWearingLeveling: %ld\n", data_block->slcNandWritesDueToWearingLeveling);
    printf("currentTlcSpareSuperBlock: %ld\n", data_block->currentTlcSpareSuperBlock);
    printf("currentSlcSpareSuperBlock: %ld\n", data_block->currentSlcSpareSuperBlock);
    printf("slcToTlcDefragCount: %ld\n", data_block->slcToTlcDefragCount);
    printf("tlcDefragCount: %ld\n", data_block->tlcDefragCount);
    printf("slcDefragCount: %ld\n", data_block->slcDefragCount);
    printf("readBackFailCount: %ld\n", data_block->readBackFailCount);
    printf("tlcProgramFail: %ld\n", data_block->tlcProgramFail);
    printf("slcProgramFail: %ld\n", data_block->slcProgramFail);
    printf("tlcEraseFail: %ld\n", data_block->tlcEraseFail);
    printf("slcEraseFail: %ld\n", data_block->slcEraseFail);
    printf("tlcEraseCycleAverage: %ld\n", data_block->tlcEraseCycleAverage);
    printf("tlcEraseCycleMax: %ld\n", data_block->tlcEraseCycleMax);
    printf("tlcEraseCycleMin: %ld\n", data_block->tlcEraseCycleMin);
    printf("slcEraseCycleAverage: %ld\n", data_block->slcEraseCycleAverage);
    printf("slcEraseCycleMax: %ld\n", data_block->slcEraseCycleMax);
    printf("slcEraseCycleMin: %ld\n", data_block->slcEraseCycleMin);
    printf("ps0ToPs1Entry: %ld\n", data_block->ps0ToPs1Entry);
    printf("ps1ToPs0Exit: %ld\n", data_block->ps1ToPs0Exit);
    printf("ps1ToPs2Entry: %ld\n", data_block->ps1ToPs2Entry);
    printf("ps2ToPs1Exit: %ld\n", data_block->ps2ToPs1Exit);
    printf("ps2ToPsShutDownEntry: %ld\n", data_block->ps2ToPsShutDownEntry);
    printf("linkDownshift: %ld\n", data_block->linkDownshift);
    printf("idleSleepCount: %ld\n", data_block->idleSleepCount);
    printf("l1EventCount: %ld\n", data_block->l1EventCount);
    printf("ecrcEventCount: %ld\n", data_block->ecrcEventCount);
    printf("lcrcEventCount: %ld\n", data_block->lcrcEventCount);
    printf("slc2tlcDataEvictionIdle: %ld\n", data_block->slc2tlcDataEvictionIdle);
    printf("slc2tlcDataEvictionRuntime: %ld\n", data_block->slc2tlcDataEvictionRuntime);
    printf("dramEccCorrected: %ld\n", data_block->dramEccCorrected);
    printf("sramEccCorrected: %ld\n", data_block->sramEccCorrected);
    printf("e2eFailDetected: %ld\n", data_block->e2eFailDetected);
    printf("ps3_5Count: %ld\n", data_block->ps3_5Count);
    printf("throttlingLightCount: %ld\n", data_block->throttlingLightCount);
    printf("throttlingHeavyCount: %ld\n", data_block->throttlingHeavyCount);
    printf("throttlingLightDuration: %ld\n", data_block->throttlingLightDuration);
    printf("throttlingHeavyDuration: %ld\n", data_block->throttlingHeavyDuration);
    printf("retryCount: %ld\n", data_block->retryCount);
    printf("softDecodeCount: %ld\n", data_block->softDecodeCount);
    printf("manfBadBlocks: %ld\n", data_block->manfBadBlocks);
    printf("manfBadBlocksWorst: %ld\n", data_block->manfBadBlocksWorst);
    printf("slcValidBlockCounts: %ld\n", data_block->slcValidBlockCounts);
    printf("tlcValidBlockCounts: %ld\n", data_block->tlcValidBlockCounts);
    printf("slcSystemBlockWrites: %ld\n", data_block->slcSystemBlockWrites);
    printf("slcWritesDueToReadDisturb: %ld\n", data_block->slcWritesDueToReadDisturb);
    printf("tlcWritesDueToReadDisturb: %ld\n", data_block->tlcWritesDueToReadDisturb);
    printf("maxOpenBlockSsgsCount: %ld\n", data_block->maxOpenBlockSsgsCount);
    printf("maxClosedBlockSsgsCount: %ld\n", data_block->maxClosedBlockSsgsCount);
    printf("l2pTableSwap: %ld\n", data_block->l2pTableSwap);
    printf("slcMaxCwErrorCountWithRrPass: %ld\n", data_block->slcMaxCwErrorCountWithRrPass);
    printf("tlc_qlcMaxCwErrorCountWithRrPass: %ld\n", data_block->tlc_qlcMaxCwErrorCountWithRrPass);
    printf("totalErasePoolBlockCount: %ld\n", data_block->totalErasePoolBlockCount);
    printf("dslcBlocksInLinkTable: %ld\n", data_block->dslcBlocksInLinkTable);
    printf("maxDslcEraseCycleCount: %ld\n", data_block->maxDslcEraseCycleCount);
    printf("avgDslcEraseCycleCount: %ld\n", data_block->avgDslcEraseCycleCount);
    printf("dslcNandWrite: %ld\n", data_block->dslcNandWrite);
    printf("dslcNandRead: %ld\n", data_block->dslcNandRead);
    printf("dslcToDslcDefragCount: %ld\n", data_block->dslcToDslcDefragCount);
    printf("dslcProgramFail: %ld\n", data_block->dslcProgramFail);
    printf("dslcEraseFail: %ld\n", data_block->dslcEraseFail);
    printf("dslcRetiredBlocks: %ld\n", data_block->dslcRetiredBlocks);
    printf("dslcAllocatedSize: %ld\n", data_block->dslcAllocatedSize);
    printf("reconditionCounts: %ld\n", data_block->reconditionCounts);
    printf("minDSLCEraseCount: %ld\n", data_block->minDSLCEraseCount);
    printf("maxTotalEraseCount: %ld\n", data_block->maxTotalEraseCount);
    printf("minTotalEraseCount: %ld\n", data_block->minTotalEraseCount);
    printf("avgTotalEraseCount: %ld\n", data_block->avgTotalEraseCount);
    printf("maxOpenSsgsCount: %ld\n", data_block->maxOpenSsgsCount);
    printf("maxClosedSsgsCount: %ld\n", data_block->maxClosedSsgsCount);
    printf("slcDummyWrites: %ld\n", data_block->slcDummyWrites);
    printf("tlcDummyWrites: %ld\n", data_block->tlcDummyWrites);
    printf("dslcDummyWrites: %ld\n", data_block->dslcDummyWrites);
    printf("dummyReads: %ld\n", data_block->dummyReads);
    printf("coreDumpCount: %ld\n", data_block->coreDumpCount);
    printf("dataTrim: %ld\n", data_block->dataTrim);
    printf("tlcWaiWithDslcAsTlcSize: %ld\n", data_block->tlcWaiWithDslcAsTlcSize);
    printf("tlcWaiWithDslcAsSlcSize: %ld\n", data_block->tlcWaiWithDslcAsSlcSize);
    printf("slcWai: %ld\n", data_block->slcWai);
    printf("tlcTotalEraseCount: %ld\n", data_block->tlcTotalEraseCount);
    printf("slcTotalEraseCount: %ld\n", data_block->slcTotalEraseCount);
    printf("dslcTotalEraseCount: %ld\n", data_block->dslcTotalEraseCount);
    printf("tlcBlockSectorCount: %ld\n", data_block->tlcBlockSectorCount);
    printf("mapBlockPopCount: %ld\n", data_block->mapBlockPopCount);
    printf("gwproBlockPopCount: %ld\n", data_block->gwproBlockPopCount);
    printf("dramRetrainCount: %ld\n", data_block->dramRetrainCount);
}

//parse function for series61_vs

static int vt_parse_series61_vs_info(int argc, char **argv, struct command *cmd, struct plugin *plugin) {
    OPT_ARGS(opts) = {
        OPT_END()
    };

    int fd = parse_and_open(argc, argv, "", opts);
    if(fd < 0) {
        printf("Error parse and open (fd = %d)\n", fd);
        return -1;
    }

    int log_len = 4096;
    unsigned char* log_data = malloc(log_len);
    int err = nvme_get_log(fd, NVME_NSID_ALL, 0xc6, 0, 1, log_len, log_data);

    if (err != 0) {
        printf("Invalid log page access!\n");
    } else {
        series61_vs data_block;
        memcpy(&data_block, log_data, sizeof(data_block));
        print_series61_vs(&data_block);
    }

    free(log_data);

    return err;
}

//plugin for series61_vs

ENTRY("parse-series61-vs","Prints formatted Series 61-specific info block", vt_parse_series61_vs)

